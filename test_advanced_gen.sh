#!/bin/bash

# @高级生成 功能快速测试脚本

echo "================================================================================================"
echo "🧪 @高级生成 功能测试"
echo "================================================================================================"
echo ""

# 检查标注教案.docx是否存在
if [ ! -f "标注教案.docx" ]; then
    echo "❌ 错误: 找不到 标注教案.docx 文件"
    echo "   请确保模板文件在项目根目录"
    exit 1
fi

echo "✅ 找到模板文件: 标注教案.docx"
echo ""

# 检查Python环境
if ! command -v python &> /dev/null; then
    echo "❌ 错误: 找不到Python"
    exit 1
fi

echo "✅ Python环境检查通过"
echo ""

# 检查依赖
echo "📦 检查依赖包..."
python -c "import docx; from core.agent import UniversityCourseAgent" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "⚠️  警告: 缺少必要的依赖包"
    echo "   运行: pip install -r requirements.txt"
    exit 1
fi

echo "✅ 依赖包检查通过"
echo ""

echo "================================================================================================"
echo "🎯 测试选项"
echo "================================================================================================"
echo ""
echo "1. 命令行测试 - 直接使用advanced_gen.py"
echo "2. API测试 - 启动服务器测试Web接口"
echo "3. 查看使用文档"
echo ""

read -p "请选择测试方式 (1/2/3): " choice

case $choice in
    1)
        echo ""
        echo "🚀 启动命令行测试..."
        echo ""
        echo "示例命令:"
        echo "  python advanced_gen.py \"Python字典操作\""
        echo ""
        read -p "请输入教案主题（直接回车使用示例）: " topic
        
        if [ -z "$topic" ]; then
            topic="Python字典操作"
        fi
        
        echo ""
        echo "================================================================================================"
        echo "🔧 执行: python advanced_gen.py \"$topic\""
        echo "================================================================================================"
        echo ""
        
        python advanced_gen.py "$topic"
        ;;
        
    2)
        echo ""
        echo "🌐 启动Web服务器..."
        echo ""
        echo "================================================================================================"
        echo "📝 测试步骤:"
        echo "================================================================================================"
        echo ""
        echo "1. 服务器启动后，访问: http://localhost:5025/"
        echo "2. 如未登录，先进行登录或注册"
        echo "3. 点击主页的「🚀 @高级生成」功能卡片"
        echo "4. 在弹出的对话框中输入主题（或点击示例标签）"
        echo "5. 点击「开始生成」按钮"
        echo "6. 等待3-5分钟查看结果"
        echo "7. 点击下载链接获取生成的教案文件"
        echo ""
        echo "按 Ctrl+C 停止服务器"
        echo ""
        read -p "按回车键启动服务器..." 
        
        python web_main.py
        ;;
        
    3)
        echo ""
        echo "📖 显示使用文档..."
        echo ""
        
        if [ -f "高级生成使用说明.md" ]; then
            cat "高级生成使用说明.md" | head -100
            echo ""
            echo "..."
            echo ""
            echo "完整文档请查看: 高级生成使用说明.md"
        else
            echo "❌ 找不到使用说明文档"
        fi
        ;;
        
    *)
        echo "❌ 无效的选择"
        exit 1
        ;;
esac

echo ""
echo "================================================================================================"
echo "✅ 测试完成"
echo "================================================================================================"

